[{"title":"AlertLibrary","type":0,"sectionRef":"#","url":"/BetterUI/api/AlertLibrary","content":"","keywords":""},{"title":"Types​","type":1,"pageTitle":"AlertLibrary","url":"/BetterUI/api/AlertLibrary#types","content":" "},{"title":"AlertCreationOptions​","type":1,"pageTitle":"AlertLibrary","url":"/BetterUI/api/AlertLibrary#AlertCreationOptions","content":"&lt;/&gt; interface AlertCreationOptions { player: Player -- The player inside of the game title: string-- The title of the alert description: string-- The description of the alert close: string-- The close button text theme: 0 | 1-- The theme of the alert * } The options to alert a player. Theme Option 0: Dark theme • 1: Light theme • default: 0 "},{"title":"Functions​","type":1,"pageTitle":"AlertLibrary","url":"/BetterUI/api/AlertLibrary#functions","content":" "},{"title":"new​","type":1,"pageTitle":"AlertLibrary","url":"/BetterUI/api/AlertLibrary#new","content":"&lt;/&gt; AlertLibrary.new(options: AlertCreationOptions) → () Creates an alert to a single player. "},{"title":"BetterUI","type":0,"sectionRef":"#","url":"/BetterUI/api/BetterUI","content":"","keywords":""},{"title":"Properties​","type":1,"pageTitle":"BetterUI","url":"/BetterUI/api/BetterUI#properties","content":" "},{"title":"Switch​","type":1,"pageTitle":"BetterUI","url":"/BetterUI/api/BetterUI#Switch","content":"since 1.0.0 &lt;/&gt; BetterUI.Switch: SwitchLibrary   "},{"title":"Alert​","type":1,"pageTitle":"BetterUI","url":"/BetterUI/api/BetterUI#Alert","content":"since 1.0.1 &lt;/&gt; BetterUI.Alert: AlertLibrary   "},{"title":"Progress​","type":1,"pageTitle":"BetterUI","url":"/BetterUI/api/BetterUI#Progress","content":"since 2.0.0 &lt;/&gt; BetterUI.Progress: ProgressLibrary   "},{"title":"Firebase​","type":1,"pageTitle":"BetterUI","url":"/BetterUI/api/BetterUI#Firebase","content":"This item only works when running on the server. Server since 3.0.0 &lt;/&gt; BetterUI.Firebase: FirebaseService  "},{"title":"DefaultFirebaseService","type":0,"sectionRef":"#","url":"/BetterUI/api/DefaultFirebaseService","content":"","keywords":""},{"title":"Types​","type":1,"pageTitle":"DefaultFirebaseService","url":"/BetterUI/api/DefaultFirebaseService#types","content":" "},{"title":"FirebaseOptions​","type":1,"pageTitle":"DefaultFirebaseService","url":"/BetterUI/api/DefaultFirebaseService#FirebaseOptions","content":"&lt;/&gt; interface FirebaseOptions { databaseUrl: string-- The URL of the datastore authToken: string-- The authentication token of the firebase } The options for firebase warning Any of the properties being invalid will break the firebase service. "},{"title":"Functions​","type":1,"pageTitle":"DefaultFirebaseService","url":"/BetterUI/api/DefaultFirebaseService#functions","content":" "},{"title":"setup​","type":1,"pageTitle":"DefaultFirebaseService","url":"/BetterUI/api/DefaultFirebaseService#setup","content":"&lt;/&gt; DefaultFirebaseService.setup(options: FirebaseOptions) → FirebaseService  "},{"title":"FirebaseService","type":0,"sectionRef":"#","url":"/BetterUI/api/FirebaseService","content":"","keywords":""},{"title":"Properties​","type":1,"pageTitle":"FirebaseService","url":"/BetterUI/api/FirebaseService#properties","content":" "},{"title":"Locked​","type":1,"pageTitle":"FirebaseService","url":"/BetterUI/api/FirebaseService#Locked","content":"&lt;/&gt; FirebaseService.Locked: boolean Defines whether the database should not receive any new entries.  "},{"title":"DatabaseURL​","type":1,"pageTitle":"FirebaseService","url":"/BetterUI/api/FirebaseService#DatabaseURL","content":"&lt;/&gt; FirebaseService.DatabaseURL: string Defines the URL of the base database.  "},{"title":"AuthToken​","type":1,"pageTitle":"FirebaseService","url":"/BetterUI/api/FirebaseService#AuthToken","content":"&lt;/&gt; FirebaseService.AuthToken: string Defines the authToken of the base database. "},{"title":"Functions​","type":1,"pageTitle":"FirebaseService","url":"/BetterUI/api/FirebaseService#functions","content":" "},{"title":"Lock​","type":1,"pageTitle":"FirebaseService","url":"/BetterUI/api/FirebaseService#Lock","content":"&lt;/&gt; FirebaseService:Lock(locked: boolean?) → boolean Locks or unlocks the firebase.  "},{"title":"getDB​","type":1,"pageTitle":"FirebaseService","url":"/BetterUI/api/FirebaseService#getDB","content":"&lt;/&gt; FirebaseService:getDB( name: string,-- Name of the database database: string?-- URL of the database (Optional) ) → SnwDB Finds a datastore from URL "},{"title":"ProgressLibrary","type":0,"sectionRef":"#","url":"/BetterUI/api/ProgressLibrary","content":"","keywords":""},{"title":"Types​","type":1,"pageTitle":"ProgressLibrary","url":"/BetterUI/api/ProgressLibrary#types","content":" "},{"title":"ProgressCreationOptions​","type":1,"pageTitle":"ProgressLibrary","url":"/BetterUI/api/ProgressLibrary#ProgressCreationOptions","content":"&lt;/&gt; interface ProgressCreationOptions { parent: Instance -- the parent to set to the progress bar progress: number-- The progress as default (Max: 100) } The options to create a progress bar "},{"title":"Functions​","type":1,"pageTitle":"ProgressLibrary","url":"/BetterUI/api/ProgressLibrary#functions","content":" "},{"title":"new​","type":1,"pageTitle":"ProgressLibrary","url":"/BetterUI/api/ProgressLibrary#new","content":"&lt;/&gt; ProgressLibrary.new(options: ProgressCreationOptions) → ProgressReturnLibrary Creates a new progress bar "},{"title":"ProgressReturnLibrary","type":0,"sectionRef":"#","url":"/BetterUI/api/ProgressReturnLibrary","content":"","keywords":""},{"title":"Properties​","type":1,"pageTitle":"ProgressReturnLibrary","url":"/BetterUI/api/ProgressReturnLibrary#properties","content":" "},{"title":"Object​","type":1,"pageTitle":"ProgressReturnLibrary","url":"/BetterUI/api/ProgressReturnLibrary#Object","content":"&lt;/&gt; ProgressReturnLibrary.Object: Instance | nil The object (pg bar) "},{"title":"Functions​","type":1,"pageTitle":"ProgressReturnLibrary","url":"/BetterUI/api/ProgressReturnLibrary#functions","content":" "},{"title":"setParent​","type":1,"pageTitle":"ProgressReturnLibrary","url":"/BetterUI/api/ProgressReturnLibrary#setParent","content":"&lt;/&gt; ProgressReturnLibrary:setParent( t: ScreenGui | BillboardGui | Frame | TextLabel | ImageLabel | TextBox | ImageButton | TextButton | CanvasGroup -- Parent of the pg bar ) → Frame  Sets the parent of the switch (create)  "},{"title":"setBackground​","type":1,"pageTitle":"ProgressReturnLibrary","url":"/BetterUI/api/ProgressReturnLibrary#setBackground","content":"&lt;/&gt; ProgressReturnLibrary:setBackground( y: Color3 -- The color of the background ) → boolean Sets the background color of the progress bar  "},{"title":"setCorner​","type":1,"pageTitle":"ProgressReturnLibrary","url":"/BetterUI/api/ProgressReturnLibrary#setCorner","content":"&lt;/&gt; ProgressReturnLibrary:setCorner( y: UDim -- The corner of the background ) → boolean Sets the corner radius of the progress bar  "},{"title":"setStroke​","type":1,"pageTitle":"ProgressReturnLibrary","url":"/BetterUI/api/ProgressReturnLibrary#setStroke","content":"&lt;/&gt; ProgressReturnLibrary:setStroke( x: Color3 ,-- The color of the stroke y: number-- The thickness of the stroke ) → boolean Sets the stroke of the pg bar  "},{"title":"setProgress​","type":1,"pageTitle":"ProgressReturnLibrary","url":"/BetterUI/api/ProgressReturnLibrary#setProgress","content":"&lt;/&gt; ProgressReturnLibrary:setProgress( x: number-- Sets the progress of the pg bar. Min: 0, Max: 100 ) → boolean Sets the progress of the pg bar  "},{"title":"setPgColor​","type":1,"pageTitle":"ProgressReturnLibrary","url":"/BetterUI/api/ProgressReturnLibrary#setPgColor","content":"&lt;/&gt; ProgressReturnLibrary:setPgColor( x: Color3 -- The color of the progress ) → boolean Sets the progress color  "},{"title":"setAnchorPoint​","type":1,"pageTitle":"ProgressReturnLibrary","url":"/BetterUI/api/ProgressReturnLibrary#setAnchorPoint","content":"&lt;/&gt; ProgressReturnLibrary:setAnchorPoint( x: Vector2 -- AnchorPoint ) → boolean Sets the anchor point of the pg bar  "},{"title":"setPosition​","type":1,"pageTitle":"ProgressReturnLibrary","url":"/BetterUI/api/ProgressReturnLibrary#setPosition","content":"&lt;/&gt; ProgressReturnLibrary:setPosition( x: UDim2 -- Position ) → boolean Sets the position of the pg bar  "},{"title":"setSize​","type":1,"pageTitle":"ProgressReturnLibrary","url":"/BetterUI/api/ProgressReturnLibrary#setSize","content":"&lt;/&gt; ProgressReturnLibrary:setSize( x: UDim2 -- Size ) → boolean Sets the size of the pg bar "},{"title":"SwitchLibrary","type":0,"sectionRef":"#","url":"/BetterUI/api/SwitchLibrary","content":"","keywords":""},{"title":"Types​","type":1,"pageTitle":"SwitchLibrary","url":"/BetterUI/api/SwitchLibrary#types","content":" "},{"title":"SwitchCreationOptions​","type":1,"pageTitle":"SwitchLibrary","url":"/BetterUI/api/SwitchLibrary#SwitchCreationOptions","content":"&lt;/&gt; interface SwitchCreationOptions { parent: Instance -- The parent the switch should be set locked: boolean-- Whether or not the toggler should be locked toggled: boolean-- Whether it should be toggled on color: { disabled: Color3 , enabled: Color3 }-- Color of the switch when enabled or disabled. tweening: boolean-- Whether the switch should be tweened or no. } Options for creating a switch "},{"title":"Functions​","type":1,"pageTitle":"SwitchLibrary","url":"/BetterUI/api/SwitchLibrary#functions","content":" "},{"title":"new​","type":1,"pageTitle":"SwitchLibrary","url":"/BetterUI/api/SwitchLibrary#new","content":"&lt;/&gt; SwitchLibrary.new(options: SwitchCreationOptions) → SwitchReturnLibrary Creates a new switch "},{"title":"SnwDB","type":0,"sectionRef":"#","url":"/BetterUI/api/SnwDB","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"SnwDB","url":"/BetterUI/api/SnwDB#functions","content":" "},{"title":"GetDB​","type":1,"pageTitle":"SnwDB","url":"/BetterUI/api/SnwDB#GetDB","content":"&lt;/&gt; SnwDB.GetDB() → () Gets the GlobalDatabase with 0 keys  "},{"title":"get​","type":1,"pageTitle":"SnwDB","url":"/BetterUI/api/SnwDB#get","content":"&lt;/&gt; SnwDB.get() → () Get a directory from database  "},{"title":"set​","type":1,"pageTitle":"SnwDB","url":"/BetterUI/api/SnwDB#set","content":"&lt;/&gt; SnwDB.set( dir: string,-- Directory of database value: string-- The value can be any basic types. Using HttpService:JSONEncode is recommended before you sending this function call. ) → () Sets the value of the key. This action overwrites any existing data stored in the provided key. info If database is locked, you can not overwrite any variable.  "},{"title":"delete​","type":1,"pageTitle":"SnwDB","url":"/BetterUI/api/SnwDB#delete","content":"&lt;/&gt; SnwDB.delete( dir: string-- Dierctory of the value that you are looking for. ) → () Deletes the given key from data store and returns the value associated with that key.  "},{"title":"add​","type":1,"pageTitle":"SnwDB","url":"/BetterUI/api/SnwDB#add","content":"&lt;/&gt; SnwDB.add( dir: string,-- Key of the value that you are looking for. delta: number?-- The increasement value ) → () Increases the value of a provided key and returns the increased value. Type Checking If the key value's type is not number, an error will be thrown. "},{"title":"SwitchReturnLibrary","type":0,"sectionRef":"#","url":"/BetterUI/api/SwitchReturnLibrary","content":"","keywords":""},{"title":"Properties​","type":1,"pageTitle":"SwitchReturnLibrary","url":"/BetterUI/api/SwitchReturnLibrary#properties","content":" "},{"title":"Locked​","type":1,"pageTitle":"SwitchReturnLibrary","url":"/BetterUI/api/SwitchReturnLibrary#Locked","content":"&lt;/&gt; SwitchReturnLibrary.Locked: boolean Whether or not the toggler should not be actived.  "},{"title":"Value​","type":1,"pageTitle":"SwitchReturnLibrary","url":"/BetterUI/api/SwitchReturnLibrary#Value","content":"&lt;/&gt; SwitchReturnLibrary.Value: boolean Whether or not the toggler is toggled on. "},{"title":"Functions​","type":1,"pageTitle":"SwitchReturnLibrary","url":"/BetterUI/api/SwitchReturnLibrary#functions","content":" "},{"title":"setParent​","type":1,"pageTitle":"SwitchReturnLibrary","url":"/BetterUI/api/SwitchReturnLibrary#setParent","content":"&lt;/&gt; SwitchReturnLibrary:setParent( t: ScreenGui | BillboardGui | Frame | TextLabel | ImageLabel | TextBox | ImageButton | TextButton | CanvasGroup -- The parent of the switch ) → () Sets the parent of the switch  "},{"title":"setLock​","type":1,"pageTitle":"SwitchReturnLibrary","url":"/BetterUI/api/SwitchReturnLibrary#setLock","content":"&lt;/&gt; SwitchReturnLibrary:setLock( t: boolean-- Should it be locked? Default: true ) → () Set whether the switch should response when the user clicked  "},{"title":"setPosition​","type":1,"pageTitle":"SwitchReturnLibrary","url":"/BetterUI/api/SwitchReturnLibrary#setPosition","content":"&lt;/&gt; SwitchReturnLibrary:setPosition( y: UDim2 -- The position of the switch ) → () Sets the position of the switch  "},{"title":"setAnchorPoint​","type":1,"pageTitle":"SwitchReturnLibrary","url":"/BetterUI/api/SwitchReturnLibrary#setAnchorPoint","content":"&lt;/&gt; SwitchReturnLibrary:setAnchorPoint( y: Vector2 -- The anchor point of the switch ) → () Sets the AnchorPoint property of the switch  "},{"title":"setSize​","type":1,"pageTitle":"SwitchReturnLibrary","url":"/BetterUI/api/SwitchReturnLibrary#setSize","content":"&lt;/&gt; SwitchReturnLibrary:setSize( y: UDim2 -- Size of the switch ) → () Sets the Size of the switch  "},{"title":"setPadding​","type":1,"pageTitle":"SwitchReturnLibrary","url":"/BetterUI/api/SwitchReturnLibrary#setPadding","content":"&lt;/&gt; SwitchReturnLibrary:setPadding( x: numberPaddingonx-asis(offset), y: numberPaddingony-axis(offset) ) → () Sets the padding of the switch button  "},{"title":"setBgColor​","type":1,"pageTitle":"SwitchReturnLibrary","url":"/BetterUI/api/SwitchReturnLibrary#setBgColor","content":"&lt;/&gt; SwitchReturnLibrary:setBgColor( x: Color3 -- Color of the background of the switch ) → () Sets the background color of switch  "},{"title":"setCorner​","type":1,"pageTitle":"SwitchReturnLibrary","url":"/BetterUI/api/SwitchReturnLibrary#setCorner","content":"&lt;/&gt; SwitchReturnLibrary:setCorner( c: UDim -- The corner udim property should be set to the switch ) → () Sets the CornerRadius property of the switch  "},{"title":"setButtonColor​","type":1,"pageTitle":"SwitchReturnLibrary","url":"/BetterUI/api/SwitchReturnLibrary#setButtonColor","content":"&lt;/&gt; SwitchReturnLibrary:setButtonColor(c: Color3 Colorofthetoggler) → () Sets the switch toggler color  "},{"title":"setTweenEnabled​","type":1,"pageTitle":"SwitchReturnLibrary","url":"/BetterUI/api/SwitchReturnLibrary#setTweenEnabled","content":"&lt;/&gt; SwitchReturnLibrary:setTweenEnabled( x: boolean-- Whether it should tween or not ) → () Enables / Disables tween for switch toggler movement  "},{"title":"setEnabledColor​","type":1,"pageTitle":"SwitchReturnLibrary","url":"/BetterUI/api/SwitchReturnLibrary#setEnabledColor","content":"&lt;/&gt; SwitchReturnLibrary:setEnabledColor( c: Color3 -- The color of the toggler when enabled ) → () Sets the switch toggler color when enabled  "},{"title":"setDisableColor​","type":1,"pageTitle":"SwitchReturnLibrary","url":"/BetterUI/api/SwitchReturnLibrary#setDisableColor","content":"&lt;/&gt; SwitchReturnLibrary:setDisableColor( c: Color3 -- The color of the toggler when disabled ) → () Sets the switch toggler color when disabled  "},{"title":"setButtonCorner​","type":1,"pageTitle":"SwitchReturnLibrary","url":"/BetterUI/api/SwitchReturnLibrary#setButtonCorner","content":"&lt;/&gt; SwitchReturnLibrary:setButtonCorner( c: UDim -- The button cornerRadius property ) → () Sets the button corner (switch toggler)  "},{"title":"setBorder​","type":1,"pageTitle":"SwitchReturnLibrary","url":"/BetterUI/api/SwitchReturnLibrary#setBorder","content":"&lt;/&gt; SwitchReturnLibrary:setBorder( c: UIStroke -- Provide UIStroke, if already exists, return false instead. ) → () Sets the main border of the switch  "},{"title":"setButtonSize​","type":1,"pageTitle":"SwitchReturnLibrary","url":"/BetterUI/api/SwitchReturnLibrary#setButtonSize","content":"&lt;/&gt; SwitchReturnLibrary:setButtonSize( x: number-- The scale size of the toggler. Max: 0.5 ) → () Sets the switch toggler size  "},{"title":"noTween​","type":1,"pageTitle":"SwitchReturnLibrary","url":"/BetterUI/api/SwitchReturnLibrary#noTween","content":"deprecated in v3 &lt;/&gt; This was deprecated in v3 [BetterUI]→ This function will be removed in future major update. Use :setTweenEnabled(false) instead. SwitchReturnLibrary:noTween() → () Removes tween for switch toggler movement  "},{"title":"tween​","type":1,"pageTitle":"SwitchReturnLibrary","url":"/BetterUI/api/SwitchReturnLibrary#tween","content":"deprecated in v3 &lt;/&gt; This was deprecated in v3 [BetterUI]→ This function will be removed in future major update. Use :setTweenEnabled(true) instead. SwitchReturnLibrary:tween() → () Enables tween for switch toggler movement "},{"title":"Installation","type":0,"sectionRef":"#","url":"/BetterUI/docs/installation","content":"","keywords":""},{"title":"Start Using BetterUI​","type":1,"pageTitle":"Installation","url":"/BetterUI/docs/installation#start-using-betterui","content":"Continue exploring this documentation to understand how to use this module! :) "},{"title":"Getting Started with BetterUI","type":0,"sectionRef":"#","url":"/BetterUI/docs/intro","content":"","keywords":""},{"title":"Description​","type":1,"pageTitle":"Getting Started with BetterUI","url":"/BetterUI/docs/intro#description","content":"This module is to help developers to develop normal UIs "},{"title":"Alert","type":0,"sectionRef":"#","url":"/BetterUI/docs/Alert","content":"Alert example --- Script (Recommended) local players = game:GetService&quot;Players&quot; local playerToSend = players.TestPlayer local _L = require(path.to.BetterUI) _L.Alert.new({ player = playerToSend; title = &quot;Alert&quot;; description = &quot;Example description&quot;; close = &quot;Close Alert&quot;; theme = 1; }) Result: Light ThemeDark Theme","keywords":""},{"title":"Progress Bar","type":0,"sectionRef":"#","url":"/BetterUI/docs/Progress","content":"Progress Bar Example -- LocalScript (Recommended) local player = game:GetService&quot;Players&quot;.LocalPlayer local _L = require(path.to.BetterUI) -- Replace with the BetterUI Interface you placed into! ReplicatedStorage is recommended. local gs = player.PlayerGui.gameGui -- what your gui named (Gui Instance is required for it to work!!!) local g = _L.Progress.new({ parent = gs; progress = 0; }) g:setPosition(UDim2.new(0.5, 0, 0.5, 0)) g:setAnchorPoint(Vector2.new(0.5, 0.5)) g:setSize(UDim2.new(0, 300, 0, 10)) -- Replace with scale if you want. g:setPgColor(Color3.fromRGB(0, 200, 0)) g:setBackground(Color3.fromRGB(40, 40, 40)) g:setCorner(UDim.new(0, 2048)) Result:","keywords":""},{"title":"Switch","type":0,"sectionRef":"#","url":"/BetterUI/docs/Switch","content":"Switch Example -- LocalScript (Recommended) local player = game:GetService&quot;Players&quot;.LocalPlayer local _L = require(path.to.BetterUI) local gs = player.PlayerGui.gameGui -- what your gui named (Gui Instance is required for it to work!!!) local g = _L.Switch.new({ parent = gs; locked = false; toggled = false; color = { disabled = Color3.fromRGB(255, 0, 0); enabled = Color3.fromRGB(0, 255, 0); }; tweening = true; }) g:setPosition(UDim2.new(0.5, 0, 0.5, 0)) g:setAnchorPoint(Vector2.new(0.5, 0.5)) g:setSize(UDim2.new(0, 100, 0, 30)) -- Replace with scale if you want. g:setPadding(5, 5) g:setBgColor(Color3.new(0.001, 0.001, 0.001)) g:setCorner(UDim.new(0, 2048)) g:setButtonCorner(UDim.new(0, 2048)) g:setButtonSize(0.5) Result:","keywords":""},{"title":"Changes for Version 3.0.0","type":0,"sectionRef":"#","url":"/BetterUI/docs/Version/3.0.0","content":"Changes for Version 3.0.0 + Arguments (Options) are now required to be provided in table / object. Much easier! + Revamped multiple classes usage ","keywords":""}]